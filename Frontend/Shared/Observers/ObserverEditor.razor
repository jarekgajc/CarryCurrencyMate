@using Common.Models.Observers.Sources;
<MudCardHeader>
    <CardHeaderContent>
        <MudText Typo="Typo.h6">Observer</MudText>
    </CardHeaderContent>
</MudCardHeader>
@if (_editorState != null && _observerSource != null)
{
    <MudCardContent>
        <MudSelect T="ObservationSource" Value="Value.Source" ValueChanged="OnChangeSource" Label="Source" AnchorOrigin="Origin.BottomCenter">
            @foreach (ObservationSource observationSource in Enum.GetValues(typeof(ObservationSource)))
            {
                <MudSelectItem Value="@observationSource"/>
            }
        </MudSelect>
        <SourceAuthEditor Type="@_observerSource.SourceAuthType" Holder="@Value" />
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Text" Color="Color.Secondary" @onclick="Cancel">Cancel</MudButton>
        <MudSpacer/>
        <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="Save">Save</MudButton>
    </MudCardActions>
}

@code {
    [Parameter] public ObserverDto? Observer { get; set; }
    [Parameter, EditorRequired] public Action OnHide { get; set; } = default!;
    [Parameter, EditorRequired] public SaveEditorState<ObserverDto> OnSave { get; set; } = default!;

    public IObserverSource? _observerSource;
    public EditorState<ObserverDto>? _editorState;
    public ObserverDto Value => _editorState!.Value;

    [CascadingParameter]
    private RequestLoadController RequestLoadController { get; set; } = default!;

    protected override void OnInitialized()
    {
        _editorState = new EditorState<ObserverDto>(Observer);
        OnChangeSource(Value.Source);
    }

    private void OnChangeSource(ObservationSource observationSource)
    {
        //TODO: Value.Source may not change (check if you have ro set it manually)
        _observerSource = IObserverSource.GetInstance(observationSource);
    }

    public async void Save()
    {
        if(await OnSave(_editorState!) != null)
        {
            OnHide();
        }
    }

    public void Cancel()
    {
        OnHide();
    }
}
