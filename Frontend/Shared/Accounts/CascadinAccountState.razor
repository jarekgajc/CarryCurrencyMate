@inject HttpClient HttpClient;
@inject ObjectsStateFactory ObjectsStateFactory;

@if (_accountState.Valid && _accountPreferenceState.Valid)
{
    <CascadingValue Value="_accountState">
        <CascadingValue Value="_accountPreferenceState">
            @ChildContent
        </CascadingValue>
    </CascadingValue>
}

@code {
    private AccountState _accountState = default!;
    private AccountPreferenceState _accountPreferenceState = default!;

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    [CascadingParameter]
    private LoadRequest LoadRequest { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _accountState = ObjectsStateFactory.Create<AccountState>(LoadRequest);
        (_accountPreferenceState = ObjectsStateFactory.Create<AccountPreferenceState>(LoadRequest)).AddOnSetValues(StateHasChanged);

        await Task.WhenAll(_accountState.GetObject(), _accountPreferenceState.CreateOrGetObject());
    }
}
