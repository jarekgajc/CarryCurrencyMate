@page "/auth/login"
@inject NavigationManager Navigation
@inject HttpClient HttpClient;
@inject AuthProvider authProvider;


<MudContainer MaxWidth="MaxWidth.Small">
    <MudCard Outlined="true">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Sign in</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField @bind-Value="UserDto.Email" Label="E-mail" Variant="Variant.Text"/>
            <MudTextField @bind-Value="UserDto.Password" Label="Password" Variant="Variant.Text" InputType="InputType.Password" />
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" @onclick="GoToRegistration">Sign up</MudButton>
            <MudSpacer/>
            <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="LogIn">Sign in</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    public UserDto UserDto { get; set; } = new UserDto();

    public async void LogIn()
    {
        HttpResponseMessage response = await HttpClient.PostAsJsonAsync($"{Env.Backend}/api/auth/login", UserDto);
        string token = await response.Content.ReadAsStringAsync();
        if(!string.IsNullOrEmpty(token))
            authProvider.Authenticate(token);
    }

    public void GoToRegistration()
    {
        Navigation.NavigateTo("auth/registration");
    }
}
